[DEFAULT]
pants_version: 0.0.42

print_exception_stacktrace: True

local_artifact_cache = %(pants_bootstrapdir)s/artifact_cache

[jvm]
options: ["-Xmx1g"]

[cache.bootstrap]
# The just-in-time tool shading performed by jvm tool bootstrapping is very expensive, so we turn
# on artifact caching for it that can survive clean-all.
read_from = ["%(local_artifact_cache)s"]
write_to = ["%(local_artifact_cache)s"]

[goals]
bootstrap_buildfiles: [
    '%(buildroot)s/BUILD',
  ]


[jvm-platform]
default_platform: java8
platforms: {
    'java8': {'source': '8', 'target': '8', 'args': [] },
  }


[compile.java]
partition_size_hint: 1000000000
jvm_options: ['-Xmx2G']
compiler-bootstrap-tools: ["//:java-compiler"]


[compile.zinc]
plugins: []
jvm_options: ['-Xmx2G', '-Dzinc.analysis.cache.limit=0']


[jvm.repl.scala]
options: ["-Xmx1g", "-Dscala.usejavacp=true" ]


[jvm.test.junit]
options: ['-Djava.awt.headless=true', '-Djava.net.preferIPv4Stack=true', '-Xmx1g']

[idea]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024
