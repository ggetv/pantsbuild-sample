# All of the following are seeded with defaults in the config
#   user: the current user
#   homedir: the current user's home directory
#   buildroot: the root of this repo
#   pants_bootstrapdir: the global pants scratch space primarily used for caches
#   pants_supportdir: pants support files for this repo go here; for example: ivysettings.xml
#   pants_distdir: user visible artifacts for this repo go here
#   pants_workdir: the scratch space used to for live builds in this repo

[DEFAULT]
; TODO(John Sirois): Come up with a better public solution.
pants_support_baseurls: [
    'http://dl.bintray.com/pantsbuild/bin/build-support',
  ]

outdir: %(pants_distdir)s

jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[goals]
bootstrap_buildfiles: [
    # This will pick up the whole top level BUILD file family, including BUILD.commons
    '%(buildroot)s/BUILD',
  ]


[ivy]
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.xml


[scalastyle]
config: %(buildroot)s/build-support/scalastyle/scalastyle_config.xml
; TODO(John Sirois): The excludes are currently global for all scala files but
; they should be trimmed back or eliminated when scalastyle is restricted to
; non code-gen targets:  https://jira.twitter.biz/browse/AWESOME-6870
excludes: %(buildroot)s/build-support/scalastyle/excludes.txt


[java-compile]
jmake-bootstrap-tools: ['//:jmake']
partition_size_hint: 1000000000

jvm_args: ['-Xmx2G']


# Extra args that will be -C mapped and passed through jmake to javac.
# These can be over-ridden (overwrites) via --compile-java-args on the command line
javac_args: ['-source', '7', '-target', '7']

compiler-bootstrap-tools: ['//:java-compiler']


[scala-compile]
compile-bootstrap-tools: ['//:scala-compiler-2.10.4']
zinc-bootstrap-tools: ['//:zinc']

runtime-deps: ['//:scala-library-2.10.4']

args: [
    '-S-encoding', '-SUTF-8',
    '-S-g:vars',
  ]
warning_args: [
    '-S-deprecation',
    '-S-unchecked',
  ]
no_warning_args: [
    '-S-nowarn',
  ]

jvm_args: ['-Xmx2g', '-XX:MaxPermSize=256m', '-Dzinc.analysis.cache.limit=0']


[prepare-resources]
workdir: %(pants_workdir)s/resources


[jvm]
debug_args: ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=%(debug_port)s']

; TODO(John Sirois): Kill this when commons tests are converted to use explicit test target
; (default is False).
parallel_test_paths: True


[jvm-run]
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[scala-repl]
bootstrap-tools: ['//:scala-repl-2.10.4']
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m', '-Dscala.usejavacp=true' ]
main: scala.tools.nsc.MainGenericRunner


[junit-run]
workdir: %(pants_workdir)s/junit
junit-bootstrap-tools: ['//:junit']
emma-bootstrap-tools: ['//:emma']
jvm_args: [
    '-Djava.awt.headless=true', '-Xmx1g', '-XX:MaxPermSize=256m',

    # Needed for emma instrumenter to work against classfiles generated by java 7 compilers
    '-XX:-UseSplitVerifier'
  ]

[idea]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024
